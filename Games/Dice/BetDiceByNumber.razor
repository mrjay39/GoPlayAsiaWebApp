@using GoPlayAsiaWebApp.Games.Shared
@using GoplayasiaBlazor.Models.Constants;
@using GoPlayAsiaWebApp.ViewModels;
@using GoPlayAsiaWebApp.ViewModels;
@inject DiceViewModel _diceViewModel;


<div id="btnNumberContainer" class="container text-center p-0">
    <div class="d-flex p-0 betNumber-btn justify-content-center">
        <!-- NUMBER 1 -->
        <div class="col d-flex justify-content-center align-items-center">
            <button type="button" class="diceButton col p-2 btn-font @(Winning_Result.Contains("1") ? "win" : "")" @onclick:preventDefault @onclick='(() => SetBetCombination("1"))'>
                <p class="m-0"><span>1</span></p>

                <!-- TOKEN DISPLAY -->
                <TokenDisplay Amount="@User_Number1_Total_Bets" />
            </button>
        </div>

        <!-- NUMBER 2 -->
        <div class="col d-flex justify-content-center align-items-center">
            <button type="button" class="diceButton col p-2 btn-font @(Winning_Result.Contains("2") ? "win" : "")" @onclick:preventDefault @onclick='(() => SetBetCombination("2"))'>
                <p class="m-0"><span>2</span></p>

                <!-- TOKEN DISPLAY -->
                <TokenDisplay Amount="@User_Number2_Total_Bets" />
            </button>
        </div>

        <!-- NUMBER 3 -->
        <div class="col d-flex justify-content-center align-items-center">
            <button type="button" class="diceButton col p-2 btn-font @(Winning_Result.Contains("3") ? "win" : "")" @onclick:preventDefault @onclick='(() => SetBetCombination("3"))'>
                <p class="m-0"><span>3</span></p>

                <!-- TOKEN DISPLAY -->
                <TokenDisplay Amount="@User_Number3_Total_Bets" />

                @if (_diceViewModel.Token_Animation != "")
                {
                    <div class="additionaltokencontainer" style="--animation: @_diceViewModel.Token_Animation">
                        <img src="/img/selectedToken.png" class="tokenSelectedBet" />
                        <p class="selectedAmountToken ">@_diceViewModel.BetAmount</p>
                    </div>
                }
            </button>
        </div>

        <!-- NUMBER 4 -->
        <div class="col d-flex justify-content-center align-items-center">
            <button type="button" class="diceButton col p-2 btn-font @(Winning_Result.Contains("4") ? "win" : "")" @onclick:preventDefault @onclick='(() => SetBetCombination("4"))'>
                <p class="m-0"><span>4</span></p>

                <!-- TOKEN DISPLAY -->
                <TokenDisplay Amount="@User_Number4_Total_Bets" />
            </button>
        </div>

        <!-- NUMBER 5 -->
        <div class="col d-flex justify-content-center align-items-center">
            <button type="button" class="diceButton col p-2 btn-font @(Winning_Result.Contains("5") ? "win" : "")" @onclick:preventDefault @onclick='(() => SetBetCombination("5"))'>
                <p class="m-0"><span>5</span></p>

                <!-- TOKEN DISPLAY -->
                <TokenDisplay Amount="@User_Number5_Total_Bets" />
            </button>
        </div>

        <!-- NUMBER 6 -->
        <div class="col d-flex justify-content-center align-items-center">
            <button type="button" class="diceButton col p-2 btn-font @(Winning_Result.Contains("6") ? "win" : "")" @onclick:preventDefault @onclick='(() => SetBetCombination("6"))'>
                <p class="m-0"><span>6</span></p>

                <!-- TOKEN DISPLAY -->
                <TokenDisplay Amount="@User_Number6_Total_Bets" />
            </button>
        </div>
    </div>
</div>

@code {
    [Parameter] public string User_Number1_Total_Bets { get; set; } = "0";
    [Parameter] public string User_Number2_Total_Bets { get; set; } = "0";
    [Parameter] public string User_Number3_Total_Bets { get; set; } = "0";
    [Parameter] public string User_Number4_Total_Bets { get; set; } = "0";
    [Parameter] public string User_Number5_Total_Bets { get; set; } = "0";
    [Parameter] public string User_Number6_Total_Bets { get; set; } = "0";
    [Parameter] public string Winning_Result { get; set; } = "";

    public async Task SetBetCombination(string BetCombi)
    {
        _diceViewModel.CurrentGameType = (int)Settings.DiceBetTypes.Number;
        _diceViewModel.IsBetting_Button_Disabled = true;
        _diceViewModel.CSS_SingleColor_NumberBtn_Div = "hide";

        _diceViewModel.GameVariantId = (int)Settings.GameVariant.DiceNumber;
        _diceViewModel.BetCombinationValue = BetCombi;
        await _diceViewModel.SetGameChips((int)Settings.GameVariant.DiceNumber, true);
        await _diceViewModel.ShowDivToken();
    }
}
