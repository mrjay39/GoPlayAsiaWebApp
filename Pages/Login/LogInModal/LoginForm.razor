@using GoPlayAsiaWebApp.Goplay.Main.Login
@*===============================Login Form ==================================== *@
<div class="tab-pane active" id="loginPanel" role="tabpanel" aria-labelledby="loginTab">
    <EditForm Model="@loginDTO" OnValidSubmit="@ValidateAgreement" autocomplete="stopdoingthat" class="signin-form">
        <DataAnnotationsValidator />

        <div class="form-group mb-3">
            <input id="username" type="text" class="form-control" placeholder="Type your Username" required="" @bind-value="loginDTO.Username">
        </div>
        <div class="form-group mb-3">
            <input id="password" type="password" class="form-control" placeholder="Type your Password" required="" @bind-value="loginDTO.Password">
        </div>
        <div class="form-group">
            <button id="signIn" type="submit" class="form-control btn btn-warning rounded submit px-3">Sign In</button>
        </div>
       
        <ValidationSummary />
    </EditForm>
    <div class="container-fluid p-0">
        <OffCanvasTermsAndCondition AgreeEvent="AgreeToTerms" agreeToTerms="agreeToTerms" />

        <div class="flex justify-content-xl-center align-items-center text-light text-center mt-3">
            <button @onclick="LoginOTP" class="text-light btn bg-transparent border-0 p-0">
                <span class="text-warning fw-bold"><i class="bi bi-chat-left-dots"></i> &nbsp;Login with Verification Code</span>
            </button>
        </div>
        <div class="content text-center">
            <ul class="nav justify-content-center" role="tablist">
                <li class="nav-item" role="presentation">
                    <a id="forgotPassTab" class="text-decoration-none" data-bs-toggle="tab" @onclick:preventDefault @onclick='(() => callForgotPassword(3))' role="tab" aria-controls="forgotPasswordForm" aria-selected="false" style="cursor: pointer;">Forgot Password</a>
                </li>
            </ul>
        </div>
    </div>
</div>

@code {
    [CascadingParameter] public IModalService popupLoadingModal { get; set; }

    private async Task callForgotPassword(int comp)
    {
        if (OnForgotPassword.HasDelegate)
        {
            await OnForgotPassword.InvokeAsync(3); // Example int value
        }
    }

    private async Task AgreeToTerms(bool value)
    {
        
        agreeToTerms = value;
        if (value)
        {
            await Authenticate();
        }
    }

    private void ValidateAgreement()
    {
        agreeToTerms = true;
    }

    private void LoginOTP()
    {
        var refPopup = popupLoadingModal.Show<LoginUsingOTP>("");
    }
}