@using GoPlayAsiaWebApp.Goplay.Games.Lucky9.Components
@using GoPlayAsiaWebApp.Goplay.ViewModels
@using GoplayasiaBlazor.Models.Constants
@inject Lucky9ViewModel luckyViewModel;
@inject IToastService toastService;
<marquee class="text-light d-flex justify-content-center font-weight-bolder" style="font-size: 15px; padding: 3px 0; height:20px;">WELCOME TO LUCKY9 CARD GAME!</marquee>

<div class="mainContainer mr-1 " style="line-height: normal;">
    <div class="col row1  p-0 d-flex text-light @(RoundStatusString == Settings.Constants.Open ? "h-85" : "h-125") ">

        <!-- PLAYER REGULAR -->
        <MainBetSelection BetValueDisplay="@Settings.Constants.Player" ShowTotalBets="@luckyViewModel.ShowTotalBets"
                          FixedPricePlayerTotalBets="@FixedPricePlayerTotalBets" SampleWinFixedPrizePlayer="@SampleWinFixedPrizePlayer"
                          FixedPricePlayerMultiplier="@FixedPricePlayerMultiplier" FixedPriceBankerTotalBets="@FixedPriceBankerTotalBets"
                          SampleWinFixedPrizeBanker="@SampleWinFixedPrizeBanker"
                          FixedPriceBankerMultipler="@FixedPriceBankerMultipler"
                          RoundStatusString="@RoundStatusString"
                          UserTotalBet_FixedPrizePlayer="@luckyViewModel.UserTotalBet_FixedPrizePlayer"
                          OnClickCallback="@(() => SelectBetType((int)@Settings.L9MainBetTypes.Player))"
                          activeButtonPlayer="@activeButtonPlayer"
                          WinnerResults="@luckyViewModel.GameResultString"
                          isDisabled="@luckyViewModel.IsbuttonDisabled" />

        <!-- DRAW -->
        <SubTarget9Tie TargetTie="@TargetTie" BetType="(int)Settings.L9MainBetTypes.Draw"
                       OnClickCallback="@(() => SelectBetType((int)@Settings.L9MainBetTypes.Draw))"
                       UserTotalBet_Draw="@luckyViewModel.UserTotalBet_Draw"
                       SampleWinDraw="@SampleWinDraw"
                       WinnerResults="@luckyViewModel.GameResultString"
                       isDisabled="@luckyViewModel.IsbuttonDisabled" />

        <!-- =========== Animation ============= -->
        @* @if (luckyViewModel.RoundStatusString == Settings.Constants.Open)
        {
        <div class="col-3 d-flex p-0 align-items-center justify-content-center animation"><img src="img/BUNNY-WIN.gif" class="img img-fluid" /></div>
        } *@


        <!-- BANKER REGULAR -->
        <MainBetSelection BetValueDisplay="@Settings.Constants.Banker" ShowTotalBets="@luckyViewModel.ShowTotalBets"
                          FixedPricePlayerTotalBets="@FixedPricePlayerTotalBets" SampleWinFixedPrizePlayer="@SampleWinFixedPrizePlayer"
                          FixedPricePlayerMultiplier="@FixedPricePlayerMultiplier" FixedPriceBankerTotalBets="@FixedPriceBankerTotalBets"
                          SampleWinFixedPrizeBanker="@SampleWinFixedPrizeBanker"
                          FixedPriceBankerMultipler="@FixedPriceBankerMultipler"
                          RoundStatusString="@RoundStatusString"
                          UserTotalBet_FixedPrizeBanker="@luckyViewModel.UserTotalBet_FixedPrizeBanker"
                          OnClickCallback="@(() => SelectBetType((int)@Settings.L9MainBetTypes.Banker))"
                          activeButtonBanker="@activeButtonBanker"
                          WinnerResults="@luckyViewModel.GameResultString"
                          isDisabled="@luckyViewModel.IsbuttonDisabled" />
    </div>
    <div class="container-fluid p-0 pt-1 pb-1 lucky9-border" style="border: 2px solid #1d601b;">
        <div class="contianer-fluid pt-1">
            <p style="font-size: 13px" class="text-white fw-bold d-flex align-items-center justify-content-center">
                <span class="playerRed"></span>
                <span>PLAYER </span>
                <span class="firstBet-text">FIRST 2 CARDS BET</span>
                <span class="bankerBlue"></span>
                <span>BANKER</span>
            </p>
        </div>
        <div class="row2 d-flex " style="margin-top: 1px;">

            <!-- PLAYER RED -->
            <Sub2Reds OnClickCallback="@(() => SelectBetType((int)@Settings.L9SubBetTypes.TwoRedPlayer))"
                      BetValueDisplay="@Settings.Constants.Player" TwoRedPlayer="@TwoRedPlayer"
                      UserTotalBet_ColorRedPlayer="@luckyViewModel.UserTotalBet_ColorRedPlayer"
                      SampleWinColorRedPlayer="@luckyViewModel.SampleWinColorRedPlayer"
                      WinnerResults="@luckyViewModel.GameResult.LeftWinningColor"
                      isDisabled="@luckyViewModel.IsbuttonDisabled" />

            <!-- PLAYER BLACK -->
            <Sub2Blacks BetValueDisplay="@Settings.Constants.Player" OnClickCallback="@(() => SelectBetType((int)@Settings.L9SubBetTypes.TwoBlackPlayer))"
                        TwoBlackPlayer="@TwoBlackPlayer" UserTotalBet_ColorBlackPlayer="@luckyViewModel.UserTotalBet_ColorBlackPlayer"
                        SampleWinColorBlackPlayer="@luckyViewModel.SampleWinColorBlackPlayer"
                        WinnerResults="@luckyViewModel.GameResult.LeftWinningColor"
                        isDisabled="@luckyViewModel.IsbuttonDisabled" />

            <!-- BANKER RED -->
            <Sub2Reds OnClickCallback="@(() => SelectBetType((int)@Settings.L9SubBetTypes.TwoRedBanker))"
                      BetValueDisplay="@Settings.Constants.Banker" TwoRedBanker="@TwoRedBanker" UserTotalBet_ColorRedBanker="@luckyViewModel.UserTotalBet_ColorRedBanker"
                      SampleWinColorRedBanker="@luckyViewModel.SampleWinColorRedBanker"
                      WinnerResults="@luckyViewModel.GameResult.RightWinningColor"
                      isDisabled="@luckyViewModel.IsbuttonDisabled" />

            <!-- BANKER BLACK -->
            <Sub2Blacks BetValueDisplay="@Settings.Constants.Banker" OnClickCallback="@(() => SelectBetType((int)@Settings.L9SubBetTypes.TwoBlackBanker))"
                        TwoBlackBanker="@TwoBlackBanker" UserTotalBet_ColorBlackBanker="@luckyViewModel.UserTotalBet_ColorBlackBanker"
                        SampleWinColorBlackBanker="@luckyViewModel.SampleWinColorBlackBanker"
                        WinnerResults="@luckyViewModel.GameResult.RightWinningColor"
                        isDisabled="@luckyViewModel.IsbuttonDisabled" />
        </div>

        <div class="row3 mt-1 d-flex text-light">

            <!-- PLAYER TARGET -->
            <SubTarget9Tie TargetPlayer="@TargetPlayer" BetType="(int)Settings.L9SubBetTypes.Target9Player"
                           OnClickCallback="@(() => SelectBetType((int)@Settings.L9SubBetTypes.Target9Player))"
                           UserTotalBet_TargetPlayer="@luckyViewModel.UserTotalBet_TargetPlayer"
                           SampleWinTargetPlayer="@luckyViewModel.SampleWinTargetPlayer"
                           WinnerResults="@luckyViewModel.GameResult.LeftWinningTarget"
                           isDisabled="@luckyViewModel.IsbuttonDisabled" />

            <!-- PLAYER PAIR -->
            <SubAnyPair OnClickCallback="@(() => SelectBetType((int)@Settings.L9SubBetTypes.AnypairPlayer))"
                        SubAnyPairPlayer="@SubAnyPairPlayer" BetValueDisplay="@Settings.Constants.Player"
                        UserTotalBet_PairPlayer="@luckyViewModel.UserTotalBet_PairPlayer"
                        SampleWinPairPlayer="@luckyViewModel.SampleWinPairPlayer"
                        WinnerResults="@luckyViewModel.GameResult.LeftWinningPair"
                        isDisabled="@luckyViewModel.IsbuttonDisabled" />

            <!-- BANKER TARGET -->
            <SubTarget9Tie TargetBanker="@TargetBanker" BetType="(int)Settings.L9SubBetTypes.Target9Banker"
                           OnClickCallback="@(() => SelectBetType((int)@Settings.L9SubBetTypes.Target9Banker))"
                           UserTotalBet_TargetBanker="@luckyViewModel.UserTotalBet_TargetBanker"
                           SampleWinTargetBanker="@luckyViewModel.SampleWinTargetBanker"
                           WinnerResults="@luckyViewModel.GameResult.RightWinningTarget"
                           isDisabled="@luckyViewModel.IsbuttonDisabled" />

            <!-- BANKER PAIR -->
            <SubAnyPair OnClickCallback="@(() => SelectBetType((int)@Settings.L9SubBetTypes.AnyPairBanker))"
                        SubAnyPairBanker="@SubAnyPairBanker" BetValueDisplay="@Settings.Constants.Banker"
                        UserTotalBet_PairBanker="@luckyViewModel.UserTotalBet_PairBanker"
                        SampleWinPairBanker="@luckyViewModel.SampleWinPairBanker"
                        WinnerResults="@luckyViewModel.GameResult.RightWinningPair"
                        isDisabled="@luckyViewModel.IsbuttonDisabled" />
        </div>
    </div>
    <div class="row4 d-flex text-light maxWidth">
    </div>
    @if (luckyViewModel.RoundStatusString == Settings.Constants.Open)
    {
        <div class="@luckyViewModel.TokenDiv">
            <Token GameChips="@luckyViewModel.GameChips" TokenContainer="@TokenContainer" OnClickCallback="@(() => CheckIfPlaceBetReady())" />
        </div>
    }
    else if (luckyViewModel.RoundStatusString == Settings.Constants.Cancelled)
    {
        <div class="cancelledText text-center w-100">
            <p class="col p-0">CANCELED GAME</p>
            <p class="col p-0">BETS RETURNED </p>
        </div>
    }
</div>

@code {

}

