@using GoPlayAsiaWebApp.Goplay.ViewModels;
    using GoPlayAsiaWebApp.Goplay.ViewModels;
@inject MainCreditViewModel _mainCreditsViewModel

<div class="topupAmountContainer m">
    <div>
        <h6 class="text-center mb-2" style="color: #7f1e32; font-weight: bold">Minimum: &#8369;@String.Format("{0:#,##0.#}", _mainCreditsViewModel.TopupMinAmount) - Maximum: &#8369 @String.Format("{0:#,##0.#}", _mainCreditsViewModel.TopupMaxAmount)</h6>
    </div>
    <div class="col p-0">
        <div class="d-flex">
            <button class="col btn p-0" @onclick:preventDefault @onclick="(() => setAmount(500))">P500</button>
            <button class="col btn p-0" @onclick:preventDefault @onclick="(() => setAmount(600))">P600</button>
            <button class="col btn p-0" @onclick:preventDefault @onclick="(() => setAmount(700))">P700</button>
            <button class="col btn p-0" @onclick:preventDefault @onclick="(() => setAmount(800))">P800</button>
            <button class="col btn p-0" @onclick:preventDefault @onclick="(() => setAmount(1000))">P1K</button>
        </div>
        <div class="d-flex mt-1">
            <button class="col btn p-0" @onclick:preventDefault @onclick="(() => setAmount(2000))">P2K</button>
            <button class="col btn p-0" @onclick:preventDefault @onclick="(() => setAmount(3000))">P3K</button>
            <button class="col btn p-0" @onclick:preventDefault @onclick="(() => setAmount(4000))">P4K</button>
            <button class="col btn p-0" @onclick:preventDefault @onclick="(() => setAmount(5000))">P5K</button>
            <button class="col btn p-0" @onclick:preventDefault @onclick="(() => setAmount(10000))">P10K</button>
        </div>
    </div>
</div>
@code{
    [Parameter]
    public EventCallback<MouseEventArgs> OnClickCallback { get; set; }

    private async Task setAmount(decimal param)
    {
        _mainCreditsViewModel.SetTopupAmount(param);
        await OnClickCallback.InvokeAsync();
    }
}